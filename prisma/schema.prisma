// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  Offer Offer[]
}

enum ItemType {
  PRODUCT
  SERVICE
}

model Item {
  id          Int      @id @default(autoincrement())
  userId      Int      @default(0)
  type        ItemType
  name        String
  description String?
  price       Float? // For products/services
  duration    Int? // For services (in minutes)
  level       Int? // For skills/talents (1-10 proficiency scale)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Offers      Offer[]
}

enum OfferStatus {
  PENDING
  ACCEPTED
}

model Offer {
  id        Int         @id @default(autoincrement())
  itemId    Int         @default(0)
  item      Item        @relation(fields: [itemId], references: [id])
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  status    OfferStatus
  notes     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OffersItem {
  id        Int      @id @default(autoincrement())
  itemId    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
